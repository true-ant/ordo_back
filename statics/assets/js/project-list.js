
function htmlEntities(str) {
  return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;');
}

(function ($) {
  "use strict";

  // var table1 = table_data
  // var data = JSON.parse(table1)
  var table = document.getElementById("project-table");

  var header = [];
  var columns = []
  var rows = [];

  for (var i = 0; i < table.rows[0].cells.length; i++) {
      header.push(table.rows[0].cells[i].innerText);
      columns.push({data: table.rows[0].cells[i].innerText})
  }

  for (var i = 0; i < table.rows.length; i++) {
      var row = {};
      for (var j = 0; j < table.rows[i].cells.length; j++) {
          row[header[j]] = table.rows[i].cells[j].innerText;
      }
      rows.push(row);
  }


  // var data = table
  //   .rows()
  //   .data();

  // $('#example').DataTable().rows().iterator('row', function(context, index){
  //   var node = $(this.row(index).node()); 
  //   //node.context is element of tr generated by jQuery DataTables.
  // });

  const tmpJson = {
    recordsTotal: total_count, // expected by DataTables to create pagination
    recordsFiltered: total_count, // expected by DataTables to create pagination
    currentPage: current_page, // added by me to easily manage correct page displaying
    data:rows
  }

  $('#project-table').DataTable({
    ajax: function (data, callback, settings) {
      callback(
          tmpJson
      )
    }, // to show pagination together with serverSide property
    displayStart: tmpJson.currentPage*10, // page to display after page reload
    serverSide: true, // to show pagination together with ajax property
    pageLength: 10,
  language: {
      searchPlaceholder: 'Search...',
      sSearch: '',
    },
  });

  // Select2 
	$('.select2').select2({
		minimumResultsForSearch: Infinity
	});

})(jQuery);
