# Generated by Django 4.1.5 on 2023-02-02 18:07

from django.db import migrations

ADD_INDEX = """
CREATE INDEX vendor_inventory_refs_lpu_idx ON orders_product (vendor_id, inventory_refs, price_expiration DESC) INCLUDE (product_vendor_status);
"""

DROP_INDEX = """
DROP INDEX vendor_inventory_refs_lpu_idx;
"""

TRIGGERS_SQL = """
CREATE OR REPLACE FUNCTION update_inventory_refs() RETURNS TRIGGER
AS $$
BEGIN
    IF (TG_OP = 'INSERT') THEN
      UPDATE orders_product SET inventory_refs = inventory_refs + 1 WHERE id = new.product_id;
    ELSIF (TG_OP = 'UPDATE') THEN
      IF new.is_inventory THEN
        UPDATE orders_product SET inventory_refs = inventory_refs + 1 WHERE id = new.product_id;
      ELSE
        UPDATE orders_product SET inventory_refs = inventory_refs - 1 WHERE id = new.product_id;
      END IF;
    ELSIF (TG_OP = 'DELETE') THEN
      UPDATE orders_product SET inventory_refs = inventory_refs - 1 WHERE id = old.product_id;
    END IF;
    RETURN NULL;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER after_update_is_inventory_office_product
AFTER UPDATE ON orders_officeproduct
FOR EACH ROW
WHEN (old.is_inventory IS DISTINCT FROM new.is_inventory)
EXECUTE FUNCTION update_inventory_refs();

CREATE TRIGGER after_insert_is_inventory_office_product
AFTER INSERT ON orders_officeproduct
FOR EACH ROW
WHEN (new.is_inventory IS TRUE)
EXECUTE FUNCTION update_inventory_refs();

CREATE TRIGGER after_delete_is_inventory_office_product
AFTER DELETE ON orders_officeproduct
FOR EACH ROW
WHEN (old.is_inventory IS TRUE)
EXECUTE FUNCTION update_inventory_refs();
"""


REV_TRIGGERS_SQL = """
DROP TRIGGER after_update_is_inventory_office_product ON orders_officeproduct;
DROP TRIGGER after_insert_is_inventory_office_product ON orders_officeproduct;
DROP TRIGGER after_delete_is_inventory_office_product ON orders_officeproduct;
DROP FUNCTION IF EXISTS update_inventory_refs();
"""


class Migration(migrations.Migration):

    dependencies = [
        ("orders", "0055_product_inventory_refs"),
    ]

    operations = [
        migrations.RunSQL(ADD_INDEX, DROP_INDEX),
        migrations.RunSQL(TRIGGERS_SQL, REV_TRIGGERS_SQL),
    ]
