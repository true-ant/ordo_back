# Generated by Django 4.1.6 on 2023-02-11 22:01

from django.db import migrations

UPDATE_PRICE_EXPIRATION_SQL = """
WITH updated_prices AS (
    SELECT
        op.id,
        CASE
            WHEN op.vendor_id = 2 THEN
                CASE
                    WHEN op.is_inventory THEN coalesce(op.last_price_updated, op.updated_at) + '2 days'::interval
                    ELSE coalesce(op.last_price_updated, op.updated_at) + '1 day'::interval
                END
            ELSE
                coalesce(op.last_price_updated, op.updated_at) + '7 days'::interval
        END price_expiration_value
    FROM orders_officeproduct op
)
UPDATE orders_officeproduct op
SET price_expiration = up.price_expiration_value
FROM updated_prices up
WHERE op.id = up.id;
"""

FILL_VENDOR_SQL = """
WITH office_product_vendors as (
    SELECT ofp.id, op.vendor_id
    FROM orders_officeproduct ofp JOIN orders_product op on ofp.product_id = op.id
)
UPDATE orders_officeproduct ofp
SET vendor_id = opv.vendor_id
FROM office_product_vendors opv
WHERE ofp.id = opv.id
"""

CREATE_INDEX_SQL = """
CREATE INDEX vendor_office_inventory_price_idx ON orders_officeproduct (vendor_id, office_id, is_inventory DESC, price_expiration) INCLUDE (product_vendor_status);
"""

DROP_INDEX_SQL = """
DROP INDEX vendor_office_inventory_price_idx
"""

class Migration(migrations.Migration):

    dependencies = [
        ("orders", "0057_officeproduct_price_expiration_vendor"),
    ]

    operations = [
        migrations.RunSQL(
            FILL_VENDOR_SQL, migrations.RunSQL.noop,
        ),
        migrations.RunSQL(
            UPDATE_PRICE_EXPIRATION_SQL, migrations.RunSQL.noop
        )
    ]
